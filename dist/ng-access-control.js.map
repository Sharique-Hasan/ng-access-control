{"version":3,"sources":["../.tmp/ng-access-control.js"],"names":[],"mappings":"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","file":"ng-access-control.js","sourcesContent":["\n;(function(){\n  'use strict';\n\n  var module = angular.module( \"ng-access-control\", [] );\n  module.factory('ngAcl', ngAcl);\n  var service = {};\n  let _permissions = [];\n  let _userRoles = [];\n  let _currentRole;\n  ngAcl.$inject = [];\n\n  function ngAcl(){\n\n    service = {\n      populatePermission: (permission) => {\n        _permissions = _.compact(_permissions.concat(permission));\n      },\n      getPermission: () => {\n        return _permissions;\n      },\n      extractPermission: _objectExtractor,\n      getUserCurrentRole: () => {\n        return _currentRole;\n      },\n      populateUserRoles: (roles) => {\n        _userRoles = _.compact(_userRoles.concat(roles));\n      },\n      setCurrentRole: (role) => {\n        let incomingRoleIsInUserRoles = _.includes(_userRoles, role);\n        if(!incomingRoleIsInUserRoles){\n          throw new Error('Current role does not exist in user roles');\n        }\n        _currentRole = role;\n      },\n      getSelfOrGlobalPermission: (permission, isAuthor) => {\n        let _permissions = _.find(service.getPermission(), { name: _currentRole });\n        let keys = _.first(permission.split('.'));\n        let allowed = service.extractPermission(_permissions, `permissions.${keys}`);\n        return isAuthor ? allowed.__self : allowed.__global;\n      },\n      can: (resource) => {\n        let currentRole = service.getUserCurrentRole();\n        let permission = _.find(service.getPermission(), { name: currentRole });\n        return _.includes(permission.allowedResources, resource);\n      }\n    };\n\n    return service;\n  }\n\n  function _objectExtractor(base, key){\n    let tmpKeys = key.split('.');\n    let firstKey = tmpKeys[0];\n    if (!firstKey) return base;\n    return _objectExtractor(base[firstKey], _.tail(tmpKeys).join('.'));\n  }\n\n  function _canUpdate(data, mode, currentRole) {\n    let isAuthor = data.isAuthor;\n    let updateData = _.omit(_.clone(data), 'isAuthor');\n    for(var key in updateData){\n      if(_.isPlainObject(updateData[key])){\n        let basePlusKey = `_permissions.${key}`;\n        updateData[key] = _checkChildObject(basePlusKey, updateData[key], isAuthor);\n      }\n      //Fixme\n    }\n  }\n\n  function _checkChildObject(baseKey, childObject, isAuthor) {\n    let _permissions = _.find(service.getPermission(), { name: _currentRole });\n    for(var key in childObject){\n      if(_.isPlainObject(childObject[key])){\n        childObject[key] = _checkChildObject(key, childObject[key]);\n      }\n      else{\n        let basePlusKey = `${baseKey}.${key}`;\n        let allowed = service.extractPermission(_permissions, basePlusKey);\n        //Fixme\n      }\n    }\n  }\n\n})();;;(function(){\n\n  'use strict';\n  var module = angular.module('ng-access-control');\n  module.directive('acl', acl);\n\n  acl.$inject = ['ngAcl'];\n\n  function acl(ngAcl){\n    return {\n      priority:1001, // compiles first\n      restrict: 'A',\n      scope: {\n        acl: '@',\n        mode: '@',\n        isAuthor: '='\n      },\n      link: (scope, element) => {\n        let userRole = ngAcl.getUserCurrentRole();\n        let permissions = _.find(ngAcl.getPermission(), { name: userRole });\n        let seekingPermission = `permissions.${scope.acl}`;\n        let allowed = ngAcl.extractPermission(permissions, seekingPermission);\n        let generalPermission = ngAcl.getSelfOrGlobalPermission(scope.acl, !!scope.isAuthor);\n        let options = {\n          mode: scope.mode,\n          allowed: scope.isAuthor ? generalPermission : allowed,\n          generalPermission: generalPermission\n        };\n        let decider = permissionDecider(options);\n        if(decider.remove){\n          element.remove();\n        }\n        if(!decider.remove && decider.disable){\n          $(element).attr('disabled',true);\n        }\n      }\n    };\n\n    function permissionDecider(options) {\n      let remove, disable;\n      let mode = options.mode || 'READ';\n      remove = !(_.isEmpty(_.pick(options.allowed, 'READ')) ? options.generalPermission['READ'] : options.allowed['READ']);\n      disable = !(!remove ? _.isEmpty(_.pick(options.allowed, mode)) ? options.generalPermission[mode] : options.allowed[mode] : false);\n      return { remove: remove, disable: disable };\n    }\n\n\n  }\n\n})();"]}