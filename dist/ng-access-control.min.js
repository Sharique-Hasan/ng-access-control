"use strict";!function(){function a(){return d={populatePermission:function(a){e=_.compact(e.concat(a))},getPermission:function(){return e},extractPermission:b,getUserCurrentRole:function(){return g},populateUserRoles:function(a){f=_.compact(f.concat(a))},setCurrentRole:function(a){var b=_.includes(f,a);if(!b)throw new Error("Current role does not exist in user roles");g=a},getSelfOrGlobalPermission:function(a,b){var c=_.find(d.getPermission(),{name:g}),e=_.first(a.split(".")),f=d.extractPermission(c,"permissions."+e);return b?f.__self:f.__global},can:function(a){var b=d.getUserCurrentRole(),c=_.find(d.getPermission(),{name:b});return _.includes(c.allowedResources,a)}}}function b(a,c){var d=c.split("."),e=d[0];return e?b(a[e],_.tail(d).join(".")):a}var c=angular.module("ng-access-control",[]);c.factory("ngAcl",a);var d={},e=[],f=[],g=void 0;a.$inject=[]}(),function(){function a(a){function b(a){var b=void 0,c=void 0,d=a.mode||"READ";return b=!(void 0===_.pick(a.allowed,"READ")?a.generalPermission.READ:a.allowed.READ),c=!(b?!1:void 0===_.pick(a.allowed,d)?a.generalPermission[d]:a.allowed[d]),{remove:b,disable:c}}return{priority:1001,restrict:"A",scope:{acl:"@",mode:"@",isAuthor:"="},link:function(c,d){var e=a.getUserCurrentRole(),f=_.find(a.getPermission(),{name:e}),g="permissions."+c.acl,h=a.extractPermission(f,g),i=a.getSelfOrGlobalPermission(c.acl,!!c.isAuthor),j={mode:c.mode,allowed:c.isAuthor?i:h,generalPermission:i},k=b(j);k.remove&&d.remove(),!k.remove&&k.disable&&$(d).attr("disabled",!0)}}}var b=angular.module("ng-access-control");b.directive("acl",a),a.$inject=["ngAcl"]}();